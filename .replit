modules = ["nodejs-20", "python-3.11", "python3"]

[nix]
channel = "stable-24_05"
packages = ["cairo", "ffmpeg-full", "freetype", "ghostscript", "gobject-introspection", "gtk3", "lcms2", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "pkg-config", "qhull", "tcl", "tk", "zlib"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Analysis Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run ML Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Debug ML Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "RunAllTests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "BridgeTest"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "BackendServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "App"

[[workflows.workflow]]
name = "Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npx jest --testMatch=\"**/tests/**/*.test.js\" --runInBand --verbose"

[[workflows.workflow]]
name = "Analysis Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npx jest --testMatch=\"**/tests/**/*.test.js\" --runInBand --verbose"

[[workflows.workflow]]
name = "Run ML Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend/ml && python run_tests.py"

[[workflows.workflow]]
name = "Debug ML Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend/ml && python -m pytest tests/test_medical_image_analyzer.py -v"

[[workflows.workflow]]
name = "RunAllTests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node run-all-tests.js"

[[workflows.workflow]]
name = "BridgeTest"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && node test-enhanced-bridge.js"

[[workflows.workflow]]
name = "BackendServer"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && BACKEND_PORT=3000 node server.js"
waitForPort = 3000

[[workflows.workflow]]
name = "App"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node index.js"
waitForPort = 8000

[deployment]
run = ["sh", "-c", "cd backend && npm install express cors body-parser uuid @tensorflow/tfjs-node && node server.js"]
deploymentTarget = "cloudrun"

[[ports]]
localPort = 3000
externalPort = 8080

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 8000
externalPort = 80

[[ports]]
localPort = 8080
externalPort = 6000

[[ports]]
localPort = 34497
externalPort = 5173

[[ports]]
localPort = 34773
externalPort = 8081

[[ports]]
localPort = 35365
externalPort = 4200

[[ports]]
localPort = 35821
externalPort = 8008

[[ports]]
localPort = 36851
externalPort = 8099

[[ports]]
localPort = 36875
externalPort = 9000

[[ports]]
localPort = 37659
externalPort = 8000

[[ports]]
localPort = 37965
externalPort = 3003

[[ports]]
localPort = 39375
externalPort = 3000

[[ports]]
localPort = 42977
externalPort = 6800

[[ports]]
localPort = 44597
externalPort = 3002
