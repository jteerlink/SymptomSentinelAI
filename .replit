modules = ["nodejs-20", "python-3.11", "python3"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Analysis Test"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Run ML Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Debug ML Tests"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "WebServer"

[[workflows.workflow]]
name = "Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npx jest --testMatch=\"**/tests/**/*.test.js\" --runInBand --verbose"

[[workflows.workflow]]
name = "Analysis Test"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && npx jest tests/imageAnalysis.test.js --verbose"

[[workflows.workflow]]
name = "Run ML Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend/ml && python run_tests.py"

[[workflows.workflow]]
name = "Debug ML Tests"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend/ml && python -m pytest tests/test_medical_image_analyzer.py -v"

[[workflows.workflow]]
name = "WebServer"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && node server.js"
waitForPort = 5000

[deployment]
run = ["sh", "-c", "cd backend && npm install express cors body-parser uuid @tensorflow/tfjs-node && node server.js"]

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 8000
externalPort = 80

[[ports]]
localPort = 32777
externalPort = 3003

[[ports]]
localPort = 32871
externalPort = 5173

[[ports]]
localPort = 34557
externalPort = 9000

[[ports]]
localPort = 37025
externalPort = 6000

[[ports]]
localPort = 37905
externalPort = 8080

[[ports]]
localPort = 40649
externalPort = 8099

[[ports]]
localPort = 40711
externalPort = 6800

[[ports]]
localPort = 41715
externalPort = 3002

[[ports]]
localPort = 42879
externalPort = 8081

[[ports]]
localPort = 43093
externalPort = 3001

[[ports]]
localPort = 44087
externalPort = 8000

[[ports]]
localPort = 45011
externalPort = 3000

[[ports]]
localPort = 46289
externalPort = 8008

[[ports]]
localPort = 46749
externalPort = 4200
